name: seafile

services:
  db:
    image: mariadb:10.11
    user: 0:0
    container_name: seafile-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=$default_pwd
      - MYSQL_LOG_CONSOLE=true
      - MARIADB_AUTO_UPGRADE=1
      - TZ=$TZ
    volumes:
      - /DATA/AppData/seafile/mysql:/var/lib/mysql
    networks:
      - seafile-net
    healthcheck:
      test:
        [
          "CMD",
          "/usr/local/bin/healthcheck.sh",
          "--connect",
          "--mariadbupgrade",
          "--innodb_initialized",
        ]
      interval: 20s
      start_period: 30s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    user: 0:0
    container_name: seafile-redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$default_pwd"
    environment:
      - REDIS_PASSWORD=$default_pwd
    networks:
      - seafile-net
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "$default_pwd", "ping"]
      interval: 20s
      start_period: 30s
      timeout: 5s
      retries: 5

  seafile-app:
    image: seafileltd/seafile-mc:13.0.9
    container_name: seafile
    hostname: seafile-app
    restart: unless-stopped
    user: 0:0
    expose:
      - 80
    volumes:
      - /DATA/AppData/seafile/shared:/shared
    environment:
      - INIT_SEAFILE_ADMIN_EMAIL=admin@$domain
      - INIT_SEAFILE_ADMIN_PASSWORD=$default_pwd

      - SEAFILE_SERVER_HOSTNAME=seafile-$domain
      - SEAFILE_SERVER_PROTOCOL=https

      - SITE_ROOT=/
      - NON_ROOT=false
      - JWT_PRIVATE_KEY=$default_pwd$default_pwd$default_pwd$default_pwd
      - SEAFILE_LOG_TO_STDOUT=true
      - MD_FILE_COUNT_LIMIT=100000
      - TIME_ZONE=UTC # seafile is very sensitive to timezone

      - SEAFILE_MYSQL_DB_HOST=db
      - SEAFILE_MYSQL_DB_PORT=3306
      - SEAFILE_MYSQL_DB_USER=seafile
      - SEAFILE_MYSQL_DB_PASSWORD=$default_pwd
      - INIT_SEAFILE_MYSQL_ROOT_PASSWORD=$default_pwd
      - SEAFILE_MYSQL_DB_CCNET_DB_NAME=ccnet_db
      - SEAFILE_MYSQL_DB_SEAFILE_DB_NAME=seafile_db
      - SEAFILE_MYSQL_DB_SEAHUB_DB_NAME=seahub_db

      - CACHE_PROVIDER=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=$default_pwd

      - ENABLE_SEADOC=true
      - SEADOC_SERVER_URL=https://seafile-$domain/sdoc-server

      - ENABLE_NOTIFICATION_SERVER=true
      - INNER_NOTIFICATION_SERVER_URL=http://notification-server:8083
      - NOTIFICATION_SERVER_URL=https://seafile-$domain/notification

      - ENABLE_SEAFILE_AI=false
      - SEAFILE_AI_SERVER_URL=http://seafile-ai:8888
      - SEAFILE_AI_SECRET_KEY=$default_pwd$default_pwd$default_pwd$default_pwd
    labels:
      caddy: http://seafile-$domain
      caddy.reverse_proxy: "seafile-app:80"
      #this is required to make seafile work behind a reverse proxy and avoid CRSF issues
      caddy.reverse_proxy.0_header_up: "Host localhost"
      caddy.reverse_proxy.1_header_up: "Origin http://localhost"
      caddy.reverse_proxy.2_header_up: "Referer http://localhost/"
      caddy.reverse_proxy.3_header_up: "X-Real-IP {http.request.remote.host}"
      caddy.reverse_proxy.4_header_up: "X-Forwarded-For {http.request.remote.host}"
      caddy.reverse_proxy.5_header_up: "X-Forwarded-Proto http"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      notification-server:
        condition: service_started
    networks:
      - seafile-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f -s -L -o /dev/null -w '%{http_code}' http://localhost/ | grep -q '^200$' || exit 1"]
      interval: 30s
      start_period: 60s
      timeout: 10s
      retries: 5

  notification-server:
    image: seafileltd/notification-server:13.0.7
    container_name: notification-server
    restart: unless-stopped
    user: 0:0
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    expose:
      - 8083
    volumes:
      - /DATA/AppData/seafile/shared/seafile/logs:/shared/seafile/logs
    environment:
      - SEAFILE_SERVER_HOSTNAME=seafile-$domain
      - SEAFILE_SERVER_PROTOCOL=https
      - SEAFILE_MYSQL_DB_HOST=db
      - SEAFILE_MYSQL_DB_PORT=3306
      - SEAFILE_MYSQL_DB_USER=seafile
      - SEAFILE_MYSQL_DB_PASSWORD=$default_pwd
      - SEAFILE_MYSQL_DB_CCNET_DB_NAME=ccnet_db
      - SEAFILE_MYSQL_DB_SEAFILE_DB_NAME=seafile_db
      - TIME_ZONE=UTC # seafile is very sensitive to timezone
      - JWT_PRIVATE_KEY=$default_pwd$default_pwd$default_pwd$default_pwd
      - SEAFILE_LOG_TO_STDOUT=true
      - NOTIFICATION_SERVER_LOG_LEVEL=info
    depends_on:
      db:
        condition: service_healthy
    networks:
      - seafile-net
    labels:
      caddy: http://seafile-$domain/notification/*
      caddy.reverse_proxy: "notification-server:8083"

  seadoc:
    image: seafileltd/sdoc-server:2.0.6
    container_name: seafile-seadoc
    hostname: seadoc
    restart: unless-stopped
    user: 0:0
    expose:
      - 80
    volumes:
      - /DATA/AppData/seafile/seadoc-data:/shared
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=seafile
      - DB_PASSWORD=$default_pwd
      - DB_NAME=seahub_db
      - TIME_ZONE=UTC
      - JWT_PRIVATE_KEY=$default_pwd$default_pwd$default_pwd$default_pwd
      - NON_ROOT=false
      - SEAHUB_SERVICE_URL=https://seafile-$domain
      - SEAFILE_SERVER_HOSTNAME=seafile-$domain
      - SEAFILE_SERVER_PROTOCOL=https
    depends_on:
      db:
        condition: service_healthy
      seafile-app:
        condition: service_healthy
    networks:
      - seafile-net
    labels:
      caddy: http://seafile-$domain
      caddy.@ws.0_header: "Connection *Upgrade*"
      caddy.@ws.1_header: "Upgrade websocket"
      caddy.0_reverse_proxy: "@ws seadoc:80"
      caddy.1_handle_path: "/socket.io/*"
      caddy.1_handle_path.0_rewrite: "* /socket.io{uri}"
      caddy.1_handle_path.1_reverse_proxy: "seadoc:80"
      caddy.2_handle_path: "/sdoc-server/*"
      caddy.2_handle_path.0_rewrite: "* {uri}"
      caddy.2_handle_path.1_reverse_proxy: "seadoc:80"

  seadrive:
    image: ghcr.io/worph/seadrive-docker:latest
    container_name: seafile-seadrive
    restart: unless-stopped
    user: 0:0
    privileged: true
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse:/dev/fuse
    security_opt:
      - apparmor:unconfined
    volumes:
      - type: bind
        source: /DATA/Seafile
        target: /seadrive/mount
        bind:
          propagation: shared
    environment:
      - SEAFILE_SERVER=https://seafile-$domain
      - SEAFILE_USERNAME=admin@$domain
      - SEAFILE_PASSWORD=$default_pwd
      - CLIENT_NAME=seafile-$domain-seadrive
      - CACHE_SIZE_LIMIT=1GB
      - LOG_LEVEL=info
    depends_on:
      seafile-app:
        condition: service_healthy
    networks:
      - seafile-net

  seafile: # this service name is used by nsl.sh to route the seafile-$domain to this container
    image: lucaslorentz/caddy-docker-proxy:2.9-alpine
    user: 0:0
    container_name: seafile-caddy
    restart: unless-stopped
    expose:
      - 80
    environment:
      - CADDY_INGRESS_NETWORKS=seafile-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      seafile-app:
        condition: service_healthy
      seadoc:
        condition: service_started
    networks:
      - seafile-net  # Routes traffic to internal services
    healthcheck:
      test: ["CMD-SHELL", "curl -f -s -L -o /dev/null -w '%{http_code}' https://seafile-$domain/ | grep -q '^200$' || exit 1"]
      interval: 30s
      start_period: 60s
      timeout: 10s
      retries: 5

networks:
  seafile-net:
    name: seafile-net

x-casaos:
  store_app_id: seafile
  pre-install-cmd: |
    mkdir -p /DATA/AppData/seafile/ &&
    mkdir -p /DATA/AppData/seafile/seadoc-data &&
    mkdir -p /DATA/AppData/seafile/shared/seafile/conf &&
    mkdir -p /DATA/Seafile &&
    cat > /DATA/AppData/seafile/shared/seafile/conf/seafdav.conf << 'EOF'
    [WEBDAV]
    enabled = true
    port = 8080
    debug = true
    share_name = /seafdav
    workers = 5
    timeout = 1200
    EOF
    chown $PUID:$PGID /DATA/AppData/seafile/ 2>/dev/null || true &&
    chown $PUID:$PGID /DATA/Seafile/ 2>/dev/null || true
  webui_port: 80
  main: seafile

  icon: https://cdn.jsdelivr.net/gh/Worph/AppStore@main/Apps/Seafile/icon.png
  thumbnail: https://cdn.jsdelivr.net/gh/Worph/AppStore@main/Apps/Seafile/thumbnail.png
  screenshot_link:
    - https://cdn.jsdelivr.net/gh/Worph/AppStore@main/Apps/Seafile/screenshot-1.png
    - https://cdn.jsdelivr.net/gh/Worph/AppStore@main/Apps/Seafile/screenshot-2.png
    - https://cdn.jsdelivr.net/gh/Worph/AppStore@main/Apps/Seafile/screenshot-3.png
    - https://cdn.jsdelivr.net/gh/Worph/AppStore@main/Apps/Seafile/screenshot-4.png
    -
  architectures:
    - amd64
    - arm64
  author: Yundera Team
  category: Cloud
  description:
    en_us: Seafile is a file hosting and collaboration platform with privacy protection and teamwork features. It allows you to create private clouds for file sharing and collaboration, supporting automatic sync across devices, version control, and secure file encryption. Perfect for teams and individuals who need reliable cloud storage with advanced sharing capabilities.
    es_es: Seafile es una plataforma de alojamiento y colaboración de archivos con protección de privacidad y características de trabajo en equipo. Te permite crear nubes privadas para compartir archivos y colaborar, con sincronización automática entre dispositivos, control de versiones y cifrado seguro de archivos.
    fr_fr: Seafile est une plateforme d'hébergement et de collaboration de fichiers avec protection de la confidentialité et fonctionnalités de travail d'équipe. Elle vous permet de créer des nuages privés pour le partage et la collaboration de fichiers, prenant en charge la synchronisation automatique entre appareils, le contrôle de version et le chiffrement sécurisé des fichiers.
    ko_kr: Seafile은 개인정보 보호와 팀워크 기능을 갖춘 파일 호스팅 및 협업 플랫폼입니다. 파일 공유와 협업을 위한 프라이빗 클라우드를 생성할 수 있으며, 기기 간 자동 동기화, 버전 제어, 보안 파일 암호화를 지원합니다.
    zh_cn: Seafile 是一个文件托管和协作平台，具有隐私保护和团队协作功能。它允许您创建私有云进行文件共享和协作，支持设备间自动同步、版本控制和安全文件加密。
  developer: Seafile Ltd.
  tagline:
    en_us: Professional file sync and collaboration platform
    es_es: Plataforma profesional de sincronización y colaboración de archivos
    fr_fr: Plateforme professionnelle de synchronisation et collaboration de fichiers
    ko_kr: 전문 파일 동기화 및 협업 플랫폼
    zh_cn: 专业文件同步和协作平台
  tips:
    before_install:
      en_us: |
        **Default Admin Account**
        
        | Field    | Value          |
        |----------|----------------|
        | Email    | admin@$domain  |
        | Password | `$default_pwd` |
        
        **Features:**
        - File sync across devices with desktop and mobile apps
        - Team libraries with granular permissions
        - Version control and file history
        - Online document editing with Seadoc
        - Secure file sharing with password protection
        - WebDAV support for third-party app integration
        - Virtual drive mounted at `/DATA/Seafile` for direct host access
        
        **Post-Installation:**
        - Access via your domain to set up additional users
        - Download desktop/mobile apps for automatic sync
        - Configure team libraries for collaborative work
        - Set up two-factor authentication for enhanced security
        - Virtual Seafile drive available at `/DATA/Seafile` on the host system
  title:
    en_us: Seafile